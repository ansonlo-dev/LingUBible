name: Auto Version Update

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - '.github/workflows/**'
      - 'package.json'  # 避免無限循環

jobs:
  auto-version:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip version]') }}
    permissions:
      contents: write
      actions: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Get current version
      id: current_version
      run: |
        CURRENT_VERSION=$(node -p "require('./package.json').version")
        echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        echo "Current version: $CURRENT_VERSION"
        
    - name: Check if version should be updated
      id: should_update
      run: |
        # 檢查最近的 commit 是否包含版本更新標記
        if git log --oneline -1 | grep -q "\[version\]"; then
          echo "SHOULD_UPDATE=false" >> $GITHUB_OUTPUT
          echo "Version update skipped - commit contains [version] tag"
        else
          echo "SHOULD_UPDATE=true" >> $GITHUB_OUTPUT
          echo "Version will be updated"
        fi
        
    - name: Update version
      if: steps.should_update.outputs.SHOULD_UPDATE == 'true'
      id: update_version
      run: |
        # 自動增加 patch 版本
        npm run version:patch
        NEW_VERSION=$(node -p "require('./package.json').version")
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "Version updated to: $NEW_VERSION"
        
    - name: Update PWA version
      if: steps.should_update.outputs.SHOULD_UPDATE == 'true'
      run: |
        # 更新 PWA 版本信息
        npm run pwa:update-version
        echo "PWA version information updated"
        
    - name: Commit version update
      if: steps.should_update.outputs.SHOULD_UPDATE == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add package.json public/api/version.json
        git commit -m "🔖 [version] Auto update version to ${{ steps.update_version.outputs.NEW_VERSION }}"
        git push
        
    - name: Create and push tag
      if: steps.should_update.outputs.SHOULD_UPDATE == 'true'
      run: |
        git tag "v${{ steps.update_version.outputs.NEW_VERSION }}"
        git push origin "v${{ steps.update_version.outputs.NEW_VERSION }}"
        echo "Created and pushed tag: v${{ steps.update_version.outputs.NEW_VERSION }}"
        
    - name: Summary
      if: steps.should_update.outputs.SHOULD_UPDATE == 'true'
      run: |
        echo "🎉 Version automatically updated!"
        echo "📦 Old version: ${{ steps.current_version.outputs.CURRENT_VERSION }}"
        echo "📦 New version: ${{ steps.update_version.outputs.NEW_VERSION }}"
        echo "🏷️ Tag created: v${{ steps.update_version.outputs.NEW_VERSION }}"
        echo "🚀 Release workflow will be triggered automatically" 